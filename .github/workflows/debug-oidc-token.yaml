# .github/workflows/debug-oidc-token.yaml (一時的なデバッグ用)
name: Debug OIDC Token

on:
  workflow_dispatch: # 手動で実行できるようにする
  pull_request:

jobs:
  debug_token:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # OIDC トークンを取得するために必要
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get OIDC Token
        id: get_token
        run: |
          # OIDC トークンを取得し、環境変数に保存
          echo "OIDC_TOKEN=$(ACTIONS_RUNTIME_TOKEN=$ACTIONS_RUNTIME_TOKEN ACTIONS_ID_TOKEN_REQUEST_URL=$ACTIONS_ID_TOKEN_REQUEST_URL node \
          -e '
            const url = process.env.ACTIONS_ID_TOKEN_REQUEST_URL;
            const token = process.env.ACTIONS_RUNTIME_TOKEN;
            fetch(url, { headers: { Authorization: `Bearer ${token}` } })
            .then(res => res.json())
            .then(data => console.log(data.value));
          ')" >> $GITHUB_ENV
        shell: bash

      - name: Decode OIDC Token and Print Claims
        run: |
          # トークンを base64 デコードして JSON 形式で表示
          # JWTはヘッダー.ペイロード.署名 の形式なので、ペイロード部（2番目のセグメント）をデコード
          echo "::group::OIDC Token Claims"
          echo "${{ env.OIDC_TOKEN }}" | awk -F'.' '{print $2}' | base64 --decode | jq .
          echo "::endgroup::"
        shell: bash
        # jq がインストールされていない場合は `sudo apt-get install -y jq` を追加するか、手動でデコードする