name: Deploy to Cloud Run
on:
  # push:
  #   branches:
  #     - main # main ブランチへの push でトリガー
  pull_request:
    # branches:
    #   - main # main ブランチへのプルリクエスト作成・更新でトリガー
  workflow_dispatch: # 手動実行を許可

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write' # OIDC トークンを取得するために必要
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # -------------------------
      - name: Set up Node.js
        uses: actions/setup-node@v4 # Node.js のバージョンを指定してセットアップ
        with:
          node-version: '20' # または '18' など、安定版のLTSバージョンを指定

      - name: Get OIDC Token
        id: get_token
        run: |
          # OIDC トークンを取得し、環境変数に保存
          echo "OIDC_TOKEN=$(ACTIONS_RUNTIME_TOKEN=$ACTIONS_RUNTIME_TOKEN ACTIONS_ID_TOKEN_REQUEST_URL=$ACTIONS_ID_TOKEN_REQUEST_URL /usr/bin/node \
          -e '
            const url = process.env.ACTIONS_ID_TOKEN_REQUEST_URL;
            const token = process.env.ACTIONS_RUNTIME_TOKEN;
            fetch(url, { headers: { Authorization: `Bearer ${token}` } })
            .then(res => res.json())
            .then(data => console.log(data.value));
          ')" >> $GITHUB_ENV
        shell: bash

      - name: install jq
        run: sudo apt-get install -y jq

      - name: Decode OIDC Token and Print Claims
        run: |
          # トークンを base64 デコードして JSON 形式で表示
          # JWTはヘッダー.ペイロード.署名 の形式なので、ペイロード部（2番目のセグメント）をデコード
          echo "::group::OIDC Token Claims"
          echo "${{ env.OIDC_TOKEN }}" | awk -F'.' '{print $2}' | base64 --decode | jq .
          echo "::endgroup::"
        shell: bash      # (PHPのセットアップ、Composerインストール、テストなどのステップ)
      # -------------------------

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2 # Google公式の認証アクション
        with:
          # Google Cloud で設定した Workload Identity プロバイダのパス
          workload_identity_provider: 'projects/1035100650942/locations/global/workloadIdentityPools/github-actions-pool/providers/github-provider'
          # 権限を借用するサービスアカウントのメールアドレス
          service_account: 'cloud-run-deployer@nobu5-393106.iam.gserviceaccount.com'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: 'line-ai-bot-test' # Cloud Run サービス名
          region: 'us-west1' # デプロイリージョン
          source: '.' # ソースコードのパス
          # image: 'gcr.io/${{ env.PROJECT_ID }}/your-image-name:${{ github.sha }}' # 独自にビルドしたイメージを使う場合
